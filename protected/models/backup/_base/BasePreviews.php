<?php

/**
 * This is the model base class for the table "previews".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Previews".
 *
 * Columns in table "previews" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $PreviewId
 * @property string $type
 * @property string $url
 * @property integer $details
 * @property string $striporder
 *
 */
abstract class BasePreviews extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'previews';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Previews|Previews', $n);
	}

	public static function representingColumn() {
		return 'type';
	}

	public function rules() {
		return array(
			array('details', 'numerical', 'integerOnly'=>true),
			array('type', 'length', 'max'=>9),
			array('url', 'length', 'max'=>200),
			array('striporder', 'length', 'max'=>50),
			array('type, url, details, striporder', 'default', 'setOnEmpty' => true, 'value' => null),
			array('PreviewId, type, url, details, striporder', 'safe', 'on'=>'search'),
			array('PreviewId, type, url, details, striporder', 'safe', 'on'=>'api'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'PreviewId' => Yii::t('app', 'Preview'),
			'type' => Yii::t('app', 'Type'),
			'url' => Yii::t('app', 'Url'),
			'details' => Yii::t('app', 'Details'),
			'striporder' => Yii::t('app', 'Striporder'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('PreviewId', $this->PreviewId);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('details', $this->details);
		$criteria->compare('striporder', $this->striporder, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}