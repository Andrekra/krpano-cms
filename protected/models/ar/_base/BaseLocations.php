<?php

/**
 * This is the model base class for the table "locations".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Locations".
 *
 * Columns in table "locations" available as properties of the model,
 * followed by relations of table "locations" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $project_id
 * @property string $thumbnail
 * @property integer $image_id
 * @property integer $preview_id
 * @property integer $view_id
 *
 * @property Hotspots[] $hotspots
 * @property Projects $project
 * @property Images $image
 * @property Previews $preview
 * @property Views $view
 * @property Scenes[] $scenes
 */
abstract class BaseLocations extends BaseModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'locations';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Locations|Locations', $n);
	}

	public static function representingColumn() {
		return 'thumbnail';
	}

	public function rules() {
		return array(
			array('project_id, image_id, preview_id, view_id', 'numerical', 'integerOnly'=>true),
			array('name, thumbnail', 'length', 'max'=>255),
			array('name, project_id, thumbnail, image_id, preview_id, view_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, project_id, thumbnail, image_id, preview_id, view_id', 'safe', 'on'=>'search'),
			array('id, name, project_id, thumbnail, image_id, preview_id, view_id', 'safe', 'on'=>'api'),
		);
	}

	public function relations() {
		return array(
			'hotspots' => array(self::HAS_MANY, 'Hotspots', 'location_id'),
			'project' => array(self::BELONGS_TO, 'Projects', 'project_id'),
			'image' => array(self::BELONGS_TO, 'Images', 'image_id'),
			'preview' => array(self::BELONGS_TO, 'Previews', 'preview_id'),
			'view' => array(self::BELONGS_TO, 'Views', 'view_id'),
			'scenes' => array(self::HAS_MANY, 'Scenes', 'location_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'project_id' => null,
			'thumbnail' => Yii::t('app', 'Thumbnail'),
			'image_id' => null,
			'preview_id' => null,
			'view_id' => null,
			'hotspots' => null,
			'project' => null,
			'image' => null,
			'preview' => null,
			'view' => null,
			'scenes' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('project_id', $this->project_id);
		$criteria->compare('thumbnail', $this->thumbnail, true);
		$criteria->compare('image_id', $this->image_id);
		$criteria->compare('preview_id', $this->preview_id);
		$criteria->compare('view_id', $this->view_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}