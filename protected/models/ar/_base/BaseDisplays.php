<?php

/**
 * This is the model base class for the table "displays".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Displays".
 *
 * Columns in table "displays" available as properties of the model,
 * followed by relations of table "displays" available as properties of the model.
 *
 * @property integer $id
 * @property integer $fps
 * @property string $flash10
 * @property integer $details
 * @property integer $tessmode
 * @property string $movequality
 * @property string $stillquality
 * @property string $movequality10
 * @property string $stillquality10
 * @property double $stilltime
 * @property string $showpolys
 * @property integer $sharpen
 *
 * @property Projects[] $projects
 */
abstract class BaseDisplays extends BaseModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'displays';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Displays|Displays', $n);
	}

	public static function representingColumn() {
		return 'flash10';
	}

	public function rules() {
		return array(
			array('fps, details, tessmode, sharpen', 'numerical', 'integerOnly'=>true),
			array('stilltime', 'numerical'),
			array('flash10', 'length', 'max'=>3),
			array('movequality, stillquality, movequality10, stillquality10', 'length', 'max'=>9),
			array('showpolys', 'length', 'max'=>5),
			array('fps, flash10, details, tessmode, movequality, stillquality, movequality10, stillquality10, stilltime, showpolys, sharpen', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, fps, flash10, details, tessmode, movequality, stillquality, movequality10, stillquality10, stilltime, showpolys, sharpen', 'safe', 'on'=>'search'),
			array('id, fps, flash10, details, tessmode, movequality, stillquality, movequality10, stillquality10, stilltime, showpolys, sharpen', 'safe', 'on'=>'api'),
		);
	}

	public function relations() {
		return array(
			'projects' => array(self::HAS_MANY, 'Projects', 'display_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'fps' => Yii::t('app', 'Fps'),
			'flash10' => Yii::t('app', 'Flash10'),
			'details' => Yii::t('app', 'Details'),
			'tessmode' => Yii::t('app', 'Tessmode'),
			'movequality' => Yii::t('app', 'Movequality'),
			'stillquality' => Yii::t('app', 'Stillquality'),
			'movequality10' => Yii::t('app', 'Movequality10'),
			'stillquality10' => Yii::t('app', 'Stillquality10'),
			'stilltime' => Yii::t('app', 'Stilltime'),
			'showpolys' => Yii::t('app', 'Showpolys'),
			'sharpen' => Yii::t('app', 'Sharpen'),
			'projects' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('fps', $this->fps);
		$criteria->compare('flash10', $this->flash10, true);
		$criteria->compare('details', $this->details);
		$criteria->compare('tessmode', $this->tessmode);
		$criteria->compare('movequality', $this->movequality, true);
		$criteria->compare('stillquality', $this->stillquality, true);
		$criteria->compare('movequality10', $this->movequality10, true);
		$criteria->compare('stillquality10', $this->stillquality10, true);
		$criteria->compare('stilltime', $this->stilltime);
		$criteria->compare('showpolys', $this->showpolys, true);
		$criteria->compare('sharpen', $this->sharpen);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}