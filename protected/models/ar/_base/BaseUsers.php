<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * followed by relations of table "users" available as properties of the model.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property string $email
 * @property string $username
 * @property string $password
 * @property integer $rights
 * @property string $account
 * @property string $paytime
 *
 * @property Projects[] $projects
 */
abstract class BaseUsers extends BaseModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Users|Users', $n);
	}

	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('rights', 'numerical', 'integerOnly'=>true),
			array('firstname, lastname, email, username, password', 'length', 'max'=>255),
			array('account', 'length', 'max'=>4),
			array('paytime', 'safe'),
			array('firstname, lastname, email, username, password, rights, account, paytime', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, lastname, email, username, password, rights, account, paytime', 'safe', 'on'=>'search'),
			array('id, firstname, lastname, email, username, password, rights, account, paytime', 'safe', 'on'=>'api'),
		);
	}

	public function relations() {
		return array(
			'projects' => array(self::HAS_MANY, 'Projects', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Firstname'),
			'lastname' => Yii::t('app', 'Lastname'),
			'email' => Yii::t('app', 'Email'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'rights' => Yii::t('app', 'Rights'),
			'account' => Yii::t('app', 'Account'),
			'paytime' => Yii::t('app', 'Paytime'),
			'projects' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('rights', $this->rights);
		$criteria->compare('account', $this->account, true);
		$criteria->compare('paytime', $this->paytime, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}